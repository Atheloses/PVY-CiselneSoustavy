/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CiselneSoustavy;

import java.awt.Color;

/**
 *
 * @author student
 */
public class RGB extends javax.swing.JFrame {

    /**
     * Creates new form RGB
     */
    public RGB() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RSlide = new javax.swing.JSlider();
        GSlide = new javax.swing.JSlider();
        BSlide = new javax.swing.JSlider();
        Color = new javax.swing.JLabel();
        R = new javax.swing.JLabel();
        G = new javax.swing.JLabel();
        B = new javax.swing.JLabel();
        Vysledek1 = new javax.swing.JTextField();
        RValue = new javax.swing.JLabel();
        GValue = new javax.swing.JLabel();
        BValue = new javax.swing.JLabel();
        Vysledek2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        RSlide.setMaximum(255);
        RSlide.setValue(0);
        RSlide.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                RSlideStateChanged(evt);
            }
        });
        RSlide.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                RSlideAncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        GSlide.setMaximum(255);
        GSlide.setValue(0);
        GSlide.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                GSlideStateChanged(evt);
            }
        });
        GSlide.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                GSlideAncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        BSlide.setMaximum(255);
        BSlide.setValue(0);
        BSlide.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                BSlideStateChanged(evt);
            }
        });
        BSlide.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                BSlideAncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        Color.setOpaque(true);

        R.setText("R");

        G.setText("G");

        B.setText("B");

        Vysledek1.setText("(0,0,0)");
        Vysledek1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Vysledek1ActionPerformed(evt);
            }
        });

        RValue.setText("0");

        GValue.setText("0");

        BValue.setText("0");

        Vysledek2.setText("#ffffff");
        Vysledek2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Vysledek2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(G)
                    .addComponent(R, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Vysledek1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Vysledek2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addComponent(RSlide, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                    .addComponent(GSlide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BSlide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(GValue, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(RValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Color, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Color, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(RSlide, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(R, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(GSlide, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(GValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(G, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(B, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BSlide, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Vysledek1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Vysledek2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GSlideAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_GSlideAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_GSlideAncestorMoved

    private void BSlideAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_BSlideAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_BSlideAncestorMoved

    private void RSlideAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_RSlideAncestorMoved
        Color.setBackground(new Color(RSlide.getValue(),GSlide.getValue(),BSlide.getValue()));
        
    }//GEN-LAST:event_RSlideAncestorMoved

    private void RSlideStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_RSlideStateChanged
        Color.setBackground(new Color(RSlide.getValue(),GSlide.getValue(),BSlide.getValue()));
        Vysledek1.setText("("+RSlide.getValue()+","+GSlide.getValue()+","+BSlide.getValue()+")");
        RValue.setText(""+RSlide.getValue()+"");
        String hex = "#";
        if(RSlide.getValue()<16) hex += "0";
        hex += Integer.toHexString(RSlide.getValue());
        if(GSlide.getValue()<16) hex += "0";
        hex += Integer.toHexString(GSlide.getValue());
        if(BSlide.getValue()<16) hex += "0";
        hex += Integer.toHexString(BSlide.getValue());
        Vysledek2.setText(hex);
    }//GEN-LAST:event_RSlideStateChanged

    private void GSlideStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_GSlideStateChanged
        Vysledek1.setText("("+RSlide.getValue()+","+GSlide.getValue()+","+BSlide.getValue()+")");
        Color.setBackground(new Color(RSlide.getValue(),GSlide.getValue(),BSlide.getValue()));
        GValue.setText(""+GSlide.getValue()+"");
        String hex = "#";
        if(RSlide.getValue()<16) hex += "0";
        hex += Integer.toHexString(RSlide.getValue());
        if(GSlide.getValue()<16) hex += "0";
        hex += Integer.toHexString(GSlide.getValue());
        if(BSlide.getValue()<16) hex += "0";
        hex += Integer.toHexString(BSlide.getValue());
        Vysledek2.setText(hex);
    }//GEN-LAST:event_GSlideStateChanged

    private void BSlideStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_BSlideStateChanged
        Vysledek1.setText("("+RSlide.getValue()+","+GSlide.getValue()+","+BSlide.getValue()+")");
        Color.setBackground(new Color(RSlide.getValue(),GSlide.getValue(),BSlide.getValue()));
        BValue.setText(""+BSlide.getValue()+"");
        String hex = "#";
        if(RSlide.getValue()<16) hex += "0";
        hex += Integer.toHexString(RSlide.getValue());
        if(GSlide.getValue()<16) hex += "0";
        hex += Integer.toHexString(GSlide.getValue());
        if(BSlide.getValue()<16) hex += "0";
        hex += Integer.toHexString(BSlide.getValue());
        Vysledek2.setText(hex);
    }//GEN-LAST:event_BSlideStateChanged

    private void Vysledek1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Vysledek1ActionPerformed
        
    }//GEN-LAST:event_Vysledek1ActionPerformed

    private void Vysledek2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Vysledek2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Vysledek2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RGB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RGB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RGB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RGB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RGB().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel B;
    private javax.swing.JSlider BSlide;
    private javax.swing.JLabel BValue;
    private javax.swing.JLabel Color;
    private javax.swing.JLabel G;
    private javax.swing.JSlider GSlide;
    private javax.swing.JLabel GValue;
    private javax.swing.JLabel R;
    private javax.swing.JSlider RSlide;
    private javax.swing.JLabel RValue;
    private javax.swing.JTextField Vysledek1;
    private javax.swing.JTextField Vysledek2;
    // End of variables declaration//GEN-END:variables
}
